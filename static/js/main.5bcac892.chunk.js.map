{"version":3,"sources":["TodoItem.js","TodoList.js","TodoApp.js","App.js","index.js"],"names":["TodoItem","state","todoTitle","itemID","handleSumbit","event","preventDefault","generateID","props","newItem","title","id","completed","handleReset","setState","handleChange","target","value","Math","round","random","onSubmit","this","className","placeholder","onChange","React","PureComponent","TodoList","todoList","addNewTodo","newTodo","handleComplete","find","el","handleDestroy","newArray","filter","generateKey","type","htmlFor","map","key","onClick","listItemId","classNames","length","href","TodoApp","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5bcac892.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends React.PureComponent {\n  state = {\n    todoTitle: '',\n    itemID: 0,\n  }\n\n  handleSumbit = (event) => {\n    event.preventDefault();\n    this.generateID();\n    this.props.newItem({\n      title: this.state.todoTitle,\n      id: this.state.itemID,\n      completed: false,\n    });\n\n    this.handleReset();\n  }\n\n  handleReset = () => {\n    this.setState({ todoTitle: '' });\n  }\n\n  handleChange = (event) => {\n    this.setState({ todoTitle: event.target.value });\n  }\n\n  generateID = () => {\n    this.setState(() => ({\n      itemID: Math.round(Math.random() * 1000000000000),\n    }));\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.handleSumbit}>\n        <input\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          onChange={this.handleChange}\n          value={this.state.todoTitle}\n        />\n      </form>\n    );\n  }\n}\n\nexport default TodoItem;\n\nTodoItem.propTypes = {\n  newItem: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nclass TodoList extends React.PureComponent {\n  state = {\n    todoList: this.props.todoList,\n    // allVisible: true,\n    // activeVisible: false,\n    // completedVisible: false,\n  }\n\n  addNewTodo = (newTodo) => {\n    this.setState(({ todoList }) => ({\n      todoList: [...todoList, newTodo],\n    }));\n  }\n\n  handleComplete = (event) => {\n    if (this.state.todoList\n      .find(el => el.id === +event.target.id).completed === false) {\n      this.state.todoList\n        .find(el => el.id === +event.target.id).completed = true;\n    } else {\n      this.state.todoList\n        .find(el => el.id === +event.target.id).completed = false;\n    }\n  }\n\n  handleDestroy = (event) => {\n    const newArray = this.state.todoList\n      .filter(el => el.id !== +event.target.id);\n\n    this.setState(() => ({\n      todoList: newArray,\n    }));\n  }\n\n  generateKey = () => Math.round(Math.random() * 1000000000000)\n\n  render() {\n    return (\n      <>\n        <TodoItem\n          newItem={this.addNewTodo}\n          todoList={this.state.todoList}\n        />\n        <section className=\"main\">\n          <input type=\"checkbox\" id=\"toggle-all\" className=\"toggle-all\" />\n          <label htmlFor=\"toggle-all\">Mark all as complete</label>\n          <ul className=\"todo-list\">\n            {this.state.todoList.map(el => (\n              <li key={this.generateKey()}>\n                <div className=\"view\">\n                  <input\n                    type=\"checkbox\"\n                    className=\"toggle\"\n                    id={el.id}\n                    onClick={this.handleComplete}\n                  />\n                  <label\n                    htmlFor={this.state.listItemId}\n                    className={classNames(el.completed === true\n                      ? 'ok'\n                      : 'not-ok')}\n                  >\n                    {el.title}\n                  </label>\n                  <button\n                    type=\"button\"\n                    className=\"destroy\"\n                    id={el.id}\n                    onClick={this.handleDestroy}\n                  />\n                </div>\n              </li>\n            ))}\n          </ul>\n        </section>\n        <footer className=\"footer\">\n          <span className=\"todo-count\">\n            {this.state.todoList.length}\n            {' '}\n            items left\n          </span>\n\n          <ul className=\"filters\">\n            <li>\n              <a href=\"#/\" className=\"selected\">All</a>\n            </li>\n\n            <li>\n              <a href=\"#/active\">Active</a>\n            </li>\n\n            <li>\n              <a href=\"#/completed\">Completed</a>\n            </li>\n          </ul>\n\n          <button type=\"button\" className=\"clear-completed\">\n            Clear completed\n          </button>\n        </footer>\n      </>\n    );\n  }\n}\n\nexport default TodoList;\n\nTodoList.propTypes = {\n  todoList: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n      completed: PropTypes.bool.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport TodoList from './TodoList';\n\nclass TodoApp extends React.PureComponent {\n  state = {\n    todoList: [],\n  }\n\n  render() {\n    return (\n      <section className=\"todoapp\">\n        <header className=\"header\">\n          <h1>todos</h1>\n        </header>\n        <TodoList todoList={this.state.todoList} />\n      </section>\n    );\n  }\n}\n\nexport default TodoApp;\n","import React from 'react';\nimport TodoApp from './TodoApp';\n\nfunction App() {\n  return (\n    <TodoApp />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './base.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}